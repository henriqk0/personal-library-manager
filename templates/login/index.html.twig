<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sign In</title>

  <link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <!-- Roboto Font -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
  <style>
    /* Base styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: "Roboto", sans-serif;
      background-color: #fafafa;
      overflow-x: hidden;
    }

    /* Login Page Styles */
    .login-container {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(135deg, #005eb8 0%, #0074d9 50%, #7fdbff 100%);
      padding: 20px;
      position: relative;
      overflow: hidden;
    }

    .login-card {
      background: white;
      border-radius: 16px;
      box-shadow: 0 24px 48px rgba(0, 94, 184, 0.15);
      width: 100%;
      max-width: 400px;
      overflow: hidden;
      position: relative;
      z-index: 2;
    }

    .login-header {
      text-align: center;
      padding: 40px 32px 24px;
      background: linear-gradient(135deg, #005eb8 0%, #0074d9 100%);
      color: white;
    }

    .login-icon {
      width: 80px;
      height: 80px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 24px;
      backdrop-filter: blur(10px);
    }

    .login-icon .material-icons {
      font-size: 40px;
      color: white;
    }

    .login-title {
      font-size: 28px;
      font-weight: 400;
      margin: 0 0 8px;
      color: white;
    }

    .login-subtitle {
      font-size: 16px;
      opacity: 0.9;
      margin: 0;
      color: white;
    }

    .login-form {
      padding: 32px;
    }

    /* Error Message */
    .error-container {
      margin-bottom: 24px;
    }

    .error-message {
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 16px;
      background-color: #ffebee;
      border: 1px solid #ffcdd2;
      border-radius: 8px;
      color: #c62828;
      font-size: 14px;
    }

    .error-message .material-icons {
      font-size: 20px;
    }

    /* Input Groups */
    .input-group {
      margin-bottom: 24px;
    }

    .input-container {
      position: relative;
      display: flex;
      align-items: center;
    }

    .input-container input {
      width: 100%;
      padding: 16px 16px 16px 48px;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      font-size: 16px;
      background-color: #fafafa;
      transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
      outline: none;
    }

    .input-container input:focus {
      border-color: #005eb8;
      background-color: white;
      box-shadow: 0 0 0 3px rgba(0, 94, 184, 0.1);
    }

    .input-container input:focus + label {
      color: #005eb8;
      transform: translateY(-37px) scale(0.8);
    }

    .input-container input:not(:placeholder-shown) + label {
      transform: translateY(-37px) scale(0.8);
      color: #005eb8;
    }

    .input-container label {
      position: absolute;
      left: 48px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 16px;
      color: #757575;
      pointer-events: none;
      transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
      background: white;
      padding: 0 4px;
      transform-origin: left center;
    }

    .input-icon {
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #757575;
      font-size: 20px;
      z-index: 1;
    }

    .input-container input:focus ~ .input-icon {
      color: #005eb8;
    }

    .input-underline {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 2px;
      background: linear-gradient(90deg, #005eb8, #0074d9);
      transform: scaleX(0);
      transition: transform 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
    }

    .input-container input:focus ~ .input-underline {
      transform: scaleX(1);
    }

    /* Password Toggle */
    .password-toggle {
      position: absolute;
      right: 16px;
      top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      cursor: pointer;
      color: #757575;
      padding: 4px;
      border-radius: 50%;
      transition: all 0.2s ease;
    }

    .password-toggle:hover {
      background-color: rgba(0, 94, 184, 0.1);
      color: #005eb8;
    }

    .password-toggle .material-icons {
      font-size: 20px;
    }

    /* Checkbox */
    .checkbox-group {
      margin: 24px 0;
    }

    .checkbox-container {
      display: flex;
      align-items: center;
      cursor: pointer;
      user-select: none;
    }

    .checkbox-container input {
      opacity: 0;
      position: absolute;
    }

    .checkbox-container .checkmark {
      width: 20px;
      height: 20px;
      border: 2px solid #bdbdbd;
      border-radius: 4px;
      margin-right: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.2s ease;
      background: white;
    }

    .checkbox-container input:checked ~ .checkmark {
      background-color: #005eb8;
      border-color: #005eb8;
    }

    .checkbox-container .checkmark .material-icons {
      font-size: 16px;
      color: white;
      opacity: 0;
      transition: opacity 0.2s ease;
    }

    .checkbox-container input:checked ~ .checkmark .material-icons {
      opacity: 1;
    }

    .checkbox-label {
      font-size: 14px;
      color: #424242;
    }

    /* Login Button */
    .login-button {
      width: 100%;
      padding: 16px 24px;
      background: linear-gradient(135deg, #005eb8 0%, #0074d9 100%);
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
      box-shadow: 0 4px 12px rgba(0, 94, 184, 0.3);
      margin-bottom: 24px;
    }

    .login-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0, 94, 184, 0.4);
    }

    .login-button:active {
      transform: translateY(0);
    }

    .login-button:disabled {
      opacity: 0.7;
      cursor: not-allowed;
      transform: none;
    }

    .button-text {
      font-size: 16px;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .button-icon {
      font-size: 20px;
      transition: transform 0.2s ease;
    }

    .login-button:hover .button-icon {
      transform: translateX(4px);
    }

    /* Additional Links */
    .login-links {
      text-align: center;
    }

    .forgot-password {
      color: #005eb8;
      text-decoration: none;
      font-size: 14px;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .forgot-password:hover {
      color: #004494;
      text-decoration: underline;
    }

    /* Background Shapes */
    .background-shapes {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: 1;
    }

    .shape {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
    }

    .shape-1 {
      width: 200px;
      height: 200px;
      top: -100px;
      right: -100px;
      animation: float 6s ease-in-out infinite;
    }

    .shape-2 {
      width: 150px;
      height: 150px;
      bottom: -75px;
      left: -75px;
      animation: float 8s ease-in-out infinite reverse;
    }

    .shape-3 {
      width: 100px;
      height: 100px;
      top: 50%;
      left: -50px;
      animation: float 10s ease-in-out infinite;
    }

    @keyframes float {
      0%,
      100% {
        transform: translateY(0px) rotate(0deg);
      }
      50% {
        transform: translateY(-20px) rotate(180deg);
      }
    }

    @keyframes shake {
      0%,
      100% {
        transform: translateX(0);
      }
      10%,
      30%,
      50%,
      70%,
      90% {
        transform: translateX(-5px);
      }
      20%,
      40%,
      60%,
      80% {
        transform: translateX(5px);
      }
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

    /* Mobile Responsive */
    @media (max-width: 480px) {
      .login-container {
        padding: 16px;
      }

      .login-card {
        max-width: 100%;
      }

      .login-header {
        padding: 32px 24px 20px;
      }

      .login-form {
        padding: 24px;
      }

      .login-icon {
        width: 60px;
        height: 60px;
        margin-bottom: 16px;
      }

      .login-icon .material-icons {
        font-size: 30px;
      }

      .login-title {
        font-size: 24px;
      }

      .login-subtitle {
        font-size: 14px;
      }

      .input-container input {
        padding: 14px 14px 14px 44px;
        font-size: 16px; /* Prevent zoom on iOS */
      }

      .input-container label {
        left: 44px;
        font-size: 14px;
      }

      .input-icon {
        left: 14px;
        font-size: 18px;
      }

      .password-toggle {
        right: 14px;
      }

      .shape-1 {
        width: 120px;
        height: 120px;
        top: -60px;
        right: -60px;
      }

      .shape-2 {
        width: 100px;
        height: 100px;
        bottom: -50px;
        left: -50px;
      }

      .shape-3 {
        width: 80px;
        height: 80px;
        left: -40px;
      }
    }

    @media (max-width: 320px) {
      .login-header {
        padding: 24px 16px 16px;
      }

      .login-form {
        padding: 20px;
      }

      .input-group {
        margin-bottom: 20px;
      }
    }
  </style>
</head>

<body>
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <div class="login-icon">
                    <i class="material-icons">account_circle</i>
                </div>
                <h1 class="login-title">Welcome Back</h1>
                <p class="login-subtitle">Sign in to your account</p>
            </div>

            <form method="post" class="login-form">
                {% if error %}
                <!-- Error Message -->
                  <div class="error-container" id="errorContainer" style="display: none;">
                    <div class="error-message">
                      <i class="material-icons">error_outline</i>
                      <span id="errorText">{{ error.messageKey|trans(error.messageData, 'security') }}</span>
                    </div>
                  </div>
                {% endif %}

                <!-- Email Field -->
                <div class="input-group">
                    <div class="input-container">
                        <i class="material-icons input-icon">email</i>
                        <input type="email" id="email" name="_username" value="{{ last_username }}" required>
                        <label for="email">Email Address</label>
                        <div class="input-underline"></div>
                    </div>
                </div>

                <!-- Password Field -->
                <div class="input-group">
                    <div class="input-container">
                        <i class="material-icons input-icon">lock</i>
                        <input type="password" id="password" name="_password" required>
                        <label for="password">Password</label>
                        <button type="button" class="password-toggle" onclick="togglePassword()">
                            <i class="material-icons" id="passwordIcon">visibility_off</i>
                        </button>
                        <div class="input-underline"></div>
                    </div>
                </div>

                <!-- Remember Me -->
                <div class="checkbox-group">
                    <label class="checkbox-container">
                        <input type="checkbox" name="_remember_me">
                        <span class="checkmark">
                            <i class="material-icons">check</i>
                        </span>
                        <span class="checkbox-label">Remember me</span>
                    </label>
                </div>

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

                <!-- Submit Button -->
                <button class="login-button" type="submit">
                    <span class="button-text">Sign In</span>
                    <i class="material-icons button-icon">arrow_forward</i>
                </button>

                <!-- Additional Links -->
                <div class="login-links">
                    <a href="#" class="forgot-password">Forgot your password?</a>
                </div>
            </form>
        </div>

        <!-- Background Elements -->
        <div class="background-shapes">
            <div class="shape shape-1"></div>
            <div class="shape shape-2"></div>
            <div class="shape shape-3"></div>
        </div>
    </div>


    <script>
      function togglePassword() {
        const passwordInput = document.getElementById("password")
        const passwordIcon = document.getElementById("passwordIcon")

        if (passwordInput.type === "password") {
          passwordInput.type = "text"
          passwordIcon.textContent = "visibility"
        } else {
          passwordInput.type = "password"
          passwordIcon.textContent = "visibility_off"
        }
      }

      // Initialize the login page
      document.addEventListener("DOMContentLoaded", () => {
        const loginForm = document.querySelector(".login-form")

        if (loginForm) {
          // Input focus animations and validation
          const inputs = document.querySelectorAll(".input-container input")

          inputs.forEach((input) => {
            // Handle initial state for pre-filled inputs
            if (input.value) {
              input.nextElementSibling.style.transform = "translateY(-37px) scale(0.8)"
              input.nextElementSibling.style.color = "#005eb8"
            }

            input.addEventListener("focus", function () {
              this.parentElement.classList.add("focused")
            })

            input.addEventListener("blur", function () {
              this.parentElement.classList.remove("focused")
            })

            input.addEventListener("input", function () {
              if (this.value) {
                this.nextElementSibling.style.transform = "translateY(-37px) scale(0.8)"
                this.nextElementSibling.style.color = "#005eb8"
              } else {
                this.nextElementSibling.style.transform = "translateY(-50%) scale(1)"
                this.nextElementSibling.style.color = "#757575"
              }
            })
          })

          // Form submission with loading state
          loginForm.addEventListener("submit", function (e) {
            const submitButton = this.querySelector(".login-button")
            const buttonText = submitButton.querySelector(".button-text")
            const buttonIcon = submitButton.querySelector(".button-icon")

            // Add loading state
            submitButton.disabled = true
            buttonText.textContent = "Signing In..."
            buttonIcon.textContent = "hourglass_empty"
            buttonIcon.style.animation = "spin 1s linear infinite"

            // Remove loading state after form processes (you can remove this in production)
            setTimeout(() => {
              submitButton.disabled = false
              buttonText.textContent = "Sign In"
              buttonIcon.textContent = "arrow_forward"
              buttonIcon.style.animation = ""
            }, 2000)
          })

          // Show error message if error exists
          const errorContainer = document.getElementById("errorContainer")
          if (errorContainer && errorContainer.querySelector("#errorText").textContent.trim()) {
            errorContainer.style.display = "block"

            // Add shake animation to the card
            const loginCard = document.querySelector(".login-card")
            loginCard.style.animation = "shake 0.5s ease-in-out"

            setTimeout(() => {
              loginCard.style.animation = ""
            }, 500)
          }

          // Email validation
          const emailInput = document.getElementById("email")
          if (emailInput) {
            emailInput.addEventListener("blur", function () {
              const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
              if (this.value && !emailRegex.test(this.value)) {
                this.style.borderColor = "#d32f2f"
                this.nextElementSibling.style.color = "#d32f2f"
              } else {
                this.style.borderColor = "#e0e0e0"
                this.nextElementSibling.style.color = "#757575"
              }
            })
          }
        }
      })
    </script>
</body>
</html>
